# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window_ui.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1177, 800)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/metal_logo"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("QDockWidget {\n"
"    border: 1px solid lightgray;\n"
"    titlebar-close-icon: url(:/cancel);\n"
"    titlebar-normal-icon: url(:/unlock);\n"
"}\n"
"\n"
"QDockWidget::title {\n"
"    text-align: left; /* align the text to the left */\n"
"  /* background: lightgray; */\n"
"    padding-left: 5px;\n"
"}\n"
"\n"
"QDockWidget::close-button, QDockWidget::float-button {\n"
"    border: 0px solid transparent;\n"
"    /*background: darkgray;*/\n"
"    padding: 1px;\n"
"}\n"
"\n"
"QDockWidget::close-button:hover, QDockWidget::float-button:hover {\n"
"    background: gray;\n"
"}\n"
"\n"
"QDockWidget::close-button:pressed, QDockWidget::float-button:pressed {\n"
"    padding: 1px -1px -1px 1px;\n"
"}")
        MainWindow.setIconSize(QtCore.QSize(30, 30))
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockNestingEnabled(True)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowNestedDocks|QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks|QtWidgets.QMainWindow.ForceTabbedDocks)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setIconSize(QtCore.QSize(16, 16))
        self.tabWidget.setUsesScrollButtons(False)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setTabBarAutoHide(True)
        self.tabWidget.setObjectName("tabWidget")
        self.mainViewTab = QtWidgets.QWidget()
        self.mainViewTab.setObjectName("mainViewTab")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.mainViewTab)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/main_view"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.tabWidget.addTab(self.mainViewTab, icon1, "")
        self.tabElements = QtWidgets.QWidget()
        self.tabElements.setObjectName("tabElements")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.tabElements)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.tabWidget.addTab(self.tabElements, "")
        self.verticalLayout.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1177, 22))
        self.menubar.setBaseSize(QtCore.QSize(0, 0))
        self.menubar.setDefaultUp(False)
        self.menubar.setObjectName("menubar")
        self.menuDesign = QtWidgets.QMenu(self.menubar)
        self.menuDesign.setTearOffEnabled(False)
        self.menuDesign.setSeparatorsCollapsible(True)
        self.menuDesign.setToolTipsVisible(True)
        self.menuDesign.setObjectName("menuDesign")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuStylesheet = QtWidgets.QMenu(self.menuView)
        self.menuStylesheet.setObjectName("menuStylesheet")
        self.menuAnalysis = QtWidgets.QMenu(self.menubar)
        self.menuAnalysis.setObjectName("menuAnalysis")
        self.menuRender = QtWidgets.QMenu(self.menubar)
        self.menuRender.setObjectName("menuRender")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setMinimumSize(QtCore.QSize(0, 0))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/help"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.menuHelp.setIcon(icon2)
        self.menuHelp.setToolTipsVisible(True)
        self.menuHelp.setObjectName("menuHelp")
        self.menuPlot = QtWidgets.QMenu(self.menubar)
        self.menuPlot.setObjectName("menuPlot")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBarDesign = QtWidgets.QToolBar(MainWindow)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.toolBarDesign.setFont(font)
        self.toolBarDesign.setOrientation(QtCore.Qt.Horizontal)
        self.toolBarDesign.setIconSize(QtCore.QSize(30, 30))
        self.toolBarDesign.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.toolBarDesign.setObjectName("toolBarDesign")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBarDesign)
        self.toolBarView = QtWidgets.QToolBar(MainWindow)
        self.toolBarView.setIconSize(QtCore.QSize(30, 30))
        self.toolBarView.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.toolBarView.setObjectName("toolBarView")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBarView)
        self.dockDesign = QtWidgets.QDockWidget(MainWindow)
        self.dockDesign.setMinimumSize(QtCore.QSize(175, 128))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/design"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.dockDesign.setWindowIcon(icon3)
        self.dockDesign.setFloating(False)
        self.dockDesign.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockDesign.setObjectName("dockDesign")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.plainTextEdit.sizePolicy().hasHeightForWidth())
        self.plainTextEdit.setSizePolicy(sizePolicy)
        self.plainTextEdit.setMinimumSize(QtCore.QSize(0, 10))
        self.plainTextEdit.setMaximumSize(QtCore.QSize(16777215, 22))
        self.plainTextEdit.setBaseSize(QtCore.QSize(0, 20))
        self.plainTextEdit.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.plainTextEdit.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.plainTextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.plainTextEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.plainTextEdit.setBackgroundVisible(False)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.horizontalLayout.addWidget(self.plainTextEdit)
        self.pushButtonDeleteComps = QtWidgets.QPushButton(self.dockWidgetContents)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/delete"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.pushButtonDeleteComps.setIcon(icon4)
        self.pushButtonDeleteComps.setAutoDefault(False)
        self.pushButtonDeleteComps.setDefault(False)
        self.pushButtonDeleteComps.setFlat(False)
        self.pushButtonDeleteComps.setObjectName("pushButtonDeleteComps")
        self.horizontalLayout.addWidget(self.pushButtonDeleteComps)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.tableComponents = TableComponents(self.dockWidgetContents)
        self.tableComponents.setAlternatingRowColors(True)
        self.tableComponents.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableComponents.setSortingEnabled(True)
        self.tableComponents.setObjectName("tableComponents")
        self.tableComponents.horizontalHeader().setSortIndicatorShown(False)
        self.verticalLayout_3.addWidget(self.tableComponents)
        self.dockDesign.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockDesign)
        self.dockNewComponent = QtWidgets.QDockWidget(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/component"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.dockNewComponent.setWindowIcon(icon5)
        self.dockNewComponent.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockNewComponent.setObjectName("dockNewComponent")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.dockWidgetContents_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.plainTextEdit_2.sizePolicy().hasHeightForWidth())
        self.plainTextEdit_2.setSizePolicy(sizePolicy)
        self.plainTextEdit_2.setMinimumSize(QtCore.QSize(0, 22))
        self.plainTextEdit_2.setMaximumSize(QtCore.QSize(16777215, 25))
        self.plainTextEdit_2.setBaseSize(QtCore.QSize(0, 22))
        self.plainTextEdit_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.plainTextEdit_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.horizontalLayout_2.addWidget(self.plainTextEdit_2)
        self.verticalLayout_5.addLayout(self.horizontalLayout_2)
        self.treeWidget = QtWidgets.QTreeWidget(self.dockWidgetContents_2)
        self.treeWidget.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked)
        self.treeWidget.setAlternatingRowColors(True)
        self.treeWidget.setAnimated(True)
        self.treeWidget.setObjectName("treeWidget")
        self.treeWidget.headerItem().setText(0, "1")
        self.verticalLayout_5.addWidget(self.treeWidget)
        self.dockNewComponent.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockNewComponent)
        self.dockComponent = QtWidgets.QDockWidget(MainWindow)
        self.dockComponent.setObjectName("dockComponent")
        self.dockComponentCental = QtWidgets.QWidget()
        self.dockComponentCental.setObjectName("dockComponentCental")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.dockComponentCental)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.dockComponent.setWidget(self.dockComponentCental)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dockComponent)
        self.dockLog = QtWidgets.QDockWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dockLog.sizePolicy().hasHeightForWidth())
        self.dockLog.setSizePolicy(sizePolicy)
        self.dockLog.setMinimumSize(QtCore.QSize(78, 96))
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/log"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.dockLog.setWindowIcon(icon6)
        self.dockLog.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.dockLog.setObjectName("dockLog")
        self.dockWidgetContents_4 = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dockWidgetContents_4.sizePolicy().hasHeightForWidth())
        self.dockWidgetContents_4.setSizePolicy(sizePolicy)
        self.dockWidgetContents_4.setObjectName("dockWidgetContents_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.dockWidgetContents_4)
        self.verticalLayout_4.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.log_text = LoggingWindowWidget(self.dockWidgetContents_4)
        self.log_text.setObjectName("log_text")
        self.verticalLayout_4.addWidget(self.log_text)
        self.dockLog.setWidget(self.dockWidgetContents_4)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockLog)
        self.dockConnectors = QtWidgets.QDockWidget(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/connectors"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.dockConnectors.setWindowIcon(icon7)
        self.dockConnectors.setObjectName("dockConnectors")
        self.dockWidgetContents_5 = QtWidgets.QWidget()
        self.dockWidgetContents_5.setObjectName("dockWidgetContents_5")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.dockWidgetContents_5)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.textConnectorsFilter = QtWidgets.QPlainTextEdit(self.dockWidgetContents_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textConnectorsFilter.sizePolicy().hasHeightForWidth())
        self.textConnectorsFilter.setSizePolicy(sizePolicy)
        self.textConnectorsFilter.setMinimumSize(QtCore.QSize(0, 22))
        self.textConnectorsFilter.setMaximumSize(QtCore.QSize(16777215, 25))
        self.textConnectorsFilter.setBaseSize(QtCore.QSize(0, 22))
        self.textConnectorsFilter.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textConnectorsFilter.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textConnectorsFilter.setObjectName("textConnectorsFilter")
        self.horizontalLayout_3.addWidget(self.textConnectorsFilter)
        self.verticalLayout_6.addLayout(self.horizontalLayout_3)
        self.tableConnectors = QtWidgets.QTableView(self.dockWidgetContents_5)
        self.tableConnectors.setAlternatingRowColors(True)
        self.tableConnectors.setObjectName("tableConnectors")
        self.verticalLayout_6.addWidget(self.tableConnectors)
        self.dockConnectors.setWidget(self.dockWidgetContents_5)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockConnectors)
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/save"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon8)
        self.actionSave.setObjectName("actionSave")
        self.actionLoad = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/load"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLoad.setIcon(icon9)
        self.actionLoad.setObjectName("actionLoad")
        self.actionDesign = QtWidgets.QAction(MainWindow)
        self.actionDesign.setCheckable(True)
        self.actionDesign.setChecked(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/design"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDesign.setIcon(icon10)
        self.actionDesign.setObjectName("actionDesign")
        self.actionComponent = QtWidgets.QAction(MainWindow)
        self.actionComponent.setCheckable(True)
        self.actionComponent.setChecked(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/component"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionComponent.setIcon(icon11)
        self.actionComponent.setObjectName("actionComponent")
        self.actionElements = QtWidgets.QAction(MainWindow)
        self.actionElements.setCheckable(True)
        self.actionElements.setChecked(False)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/elements"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionElements.setIcon(icon12)
        self.actionElements.setObjectName("actionElements")
        self.actionLog = QtWidgets.QAction(MainWindow)
        self.actionLog.setCheckable(True)
        self.actionLog.setChecked(True)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/log"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLog.setIcon(icon13)
        self.actionLog.setObjectName("actionLog")
        self.actionNewComponent = QtWidgets.QAction(MainWindow)
        self.actionNewComponent.setCheckable(True)
        self.actionNewComponent.setChecked(True)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/_imgs/support.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNewComponent.setIcon(icon14)
        self.actionNewComponent.setObjectName("actionNewComponent")
        self.actionDelete_All = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/delete_all"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_All.setIcon(icon15)
        self.actionDelete_All.setObjectName("actionDelete_All")
        self.actionZoom = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/plot/zoom"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoom.setIcon(icon16)
        self.actionZoom.setObjectName("actionZoom")
        self.actionPan = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/plot/pan"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionPan.setIcon(icon17)
        self.actionPan.setObjectName("actionPan")
        self.actionConnectors = QtWidgets.QAction(MainWindow)
        self.actionConnectors.setCheckable(True)
        self.actionConnectors.setChecked(True)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/connectors"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionConnectors.setIcon(icon18)
        self.actionConnectors.setObjectName("actionConnectors")
        self.actionStyleOpen = QtWidgets.QAction(MainWindow)
        self.actionStyleOpen.setObjectName("actionStyleOpen")
        self.actionStyleDefault = QtWidgets.QAction(MainWindow)
        self.actionStyleDefault.setObjectName("actionStyleDefault")
        self.actionStyleDark = QtWidgets.QAction(MainWindow)
        self.actionStyleDark.setObjectName("actionStyleDark")
        self.actionScreenshot = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/screenshot"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionScreenshot.setIcon(icon19)
        self.actionScreenshot.setObjectName("actionScreenshot")
        self.action_full_refresh = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/force_refresh"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_full_refresh.setIcon(icon20)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.action_full_refresh.setFont(font)
        self.action_full_refresh.setObjectName("action_full_refresh")
        self.actionRebuild = QtWidgets.QAction(MainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/rebuild"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRebuild.setIcon(icon21)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.actionRebuild.setFont(font)
        self.actionRebuild.setObjectName("actionRebuild")
        self.actionFull_Screen = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/plot/autozoom"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFull_Screen.setIcon(icon22)
        self.actionFull_Screen.setObjectName("actionFull_Screen")
        self.menuDesign.addAction(self.actionSave)
        self.menuDesign.addAction(self.actionLoad)
        self.menuDesign.addSeparator()
        self.menuDesign.addAction(self.actionDelete_All)
        self.menuStylesheet.addAction(self.actionStyleDefault)
        self.menuStylesheet.addAction(self.actionStyleDark)
        self.menuStylesheet.addAction(self.actionStyleOpen)
        self.menuView.addAction(self.actionScreenshot)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionDesign)
        self.menuView.addAction(self.actionComponent)
        self.menuView.addAction(self.actionElements)
        self.menuView.addAction(self.actionConnectors)
        self.menuView.addAction(self.actionLog)
        self.menuView.addAction(self.actionNewComponent)
        self.menuView.addSeparator()
        self.menuView.addAction(self.menuStylesheet.menuAction())
        self.menuAnalysis.addSeparator()
        self.menuRender.addSeparator()
        self.menuPlot.addAction(self.actionPan)
        self.menuPlot.addAction(self.actionZoom)
        self.menubar.addAction(self.menuDesign.menuAction())
        self.menubar.addAction(self.menuPlot.menuAction())
        self.menubar.addAction(self.menuRender.menuAction())
        self.menubar.addAction(self.menuAnalysis.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBarDesign.addAction(self.actionSave)
        self.toolBarDesign.addAction(self.actionLoad)
        self.toolBarDesign.addAction(self.action_full_refresh)
        self.toolBarDesign.addAction(self.actionRebuild)
        self.toolBarDesign.addAction(self.actionDelete_All)
        self.toolBarView.addAction(self.actionDesign)
        self.toolBarView.addAction(self.actionComponent)
        self.toolBarView.addAction(self.actionNewComponent)
        self.toolBarView.addAction(self.actionConnectors)
        self.toolBarView.addAction(self.actionLog)
        self.toolBarView.addAction(self.actionElements)
        self.toolBarView.addSeparator()
        self.toolBarView.addAction(self.actionScreenshot)
        self.toolBarView.addAction(self.actionFull_Screen)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.actionElements.toggled['bool'].connect(MainWindow._set_element_tab)
        self.actionDelete_All.triggered.connect(MainWindow.delete_all_components)
        self.actionLoad.triggered.connect(MainWindow.load_design)
        self.actionSave.triggered.connect(MainWindow.save_design)
        self.actionStyleDark.triggered.connect(MainWindow.load_stylesheet_dark)
        self.actionStyleDefault.triggered.connect(MainWindow.load_stylesheet_default)
        self.actionScreenshot.triggered.connect(MainWindow._screenshot)
        self.actionStyleOpen.triggered.connect(MainWindow.load_stylesheet_open)
        self.action_full_refresh.triggered.connect(MainWindow.full_refresh)
        self.actionRebuild.triggered.connect(MainWindow.rebuild)
        self.actionFull_Screen.triggered.connect(MainWindow.showFullScreen)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Qiskit Metal - The First & Only Quantum VLSI"))
        MainWindow.setToolTip(_translate("MainWindow", "Qiskit Metal - The First & Only Quantum VLSI"))
        MainWindow.setStatusTip(_translate("MainWindow", "Qiskit Metal - The First & Only Quantum VLSI"))
        MainWindow.setWhatsThis(_translate("MainWindow", "Qiskit Metal - The First & Only Quantum VLSI"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.mainViewTab), _translate("MainWindow", "Main View"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabElements), _translate("MainWindow", "Elements"))
        self.menuDesign.setToolTip(_translate("MainWindow", "Design Menu"))
        self.menuDesign.setStatusTip(_translate("MainWindow", "Design Menu"))
        self.menuDesign.setWhatsThis(_translate("MainWindow", "Design Menu"))
        self.menuDesign.setTitle(_translate("MainWindow", "Design"))
        self.menuView.setTitle(_translate("MainWindow", "Window"))
        self.menuStylesheet.setTitle(_translate("MainWindow", "Theme"))
        self.menuAnalysis.setTitle(_translate("MainWindow", "Analysis"))
        self.menuRender.setTitle(_translate("MainWindow", "Render"))
        self.menuHelp.setToolTip(_translate("MainWindow", "Open Metal Help"))
        self.menuHelp.setStatusTip(_translate("MainWindow", "Open Metal Help"))
        self.menuHelp.setWhatsThis(_translate("MainWindow", "Open Metal Help"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuPlot.setTitle(_translate("MainWindow", "Plot"))
        self.toolBarDesign.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.toolBarDesign.setStatusTip(_translate("MainWindow", "Toolbar Design"))
        self.toolBarDesign.setWhatsThis(_translate("MainWindow", "Toolbar Design"))
        self.toolBarView.setWindowTitle(_translate("MainWindow", "toolBar_2"))
        self.toolBarView.setStatusTip(_translate("MainWindow", "View Toolbar"))
        self.toolBarView.setWhatsThis(_translate("MainWindow", "View Toolbar"))
        self.dockDesign.setToolTip(_translate("MainWindow", "Design Dock"))
        self.dockDesign.setStatusTip(_translate("MainWindow", "Design Dock"))
        self.dockDesign.setWhatsThis(_translate("MainWindow", "Design Dock"))
        self.dockDesign.setAccessibleName(_translate("MainWindow", "Design Dock"))
        self.dockDesign.setAccessibleDescription(_translate("MainWindow", "Design Dock"))
        self.dockDesign.setWindowTitle(_translate("MainWindow", "Design Dock"))
        self.plainTextEdit.setToolTip(_translate("MainWindow", "Use to filter the components"))
        self.plainTextEdit.setStatusTip(_translate("MainWindow", "Use to filter the components"))
        self.plainTextEdit.setWhatsThis(_translate("MainWindow", "Use to filter the components"))
        self.plainTextEdit.setPlaceholderText(_translate("MainWindow", "Filter (press enter)"))
        self.pushButtonDeleteComps.setToolTip(_translate("MainWindow", "Delete Selected Components"))
        self.pushButtonDeleteComps.setStatusTip(_translate("MainWindow", "Delete Selected Components"))
        self.pushButtonDeleteComps.setWhatsThis(_translate("MainWindow", "Delete Selected Components"))
        self.pushButtonDeleteComps.setText(_translate("MainWindow", "Delete"))
        self.dockNewComponent.setToolTip(_translate("MainWindow", "New Component Dock"))
        self.dockNewComponent.setStatusTip(_translate("MainWindow", "New Component Dock"))
        self.dockNewComponent.setWhatsThis(_translate("MainWindow", "New Component Dock"))
        self.dockNewComponent.setWindowTitle(_translate("MainWindow", "New Component"))
        self.plainTextEdit_2.setPlaceholderText(_translate("MainWindow", "Filter (press enter)"))
        self.treeWidget.setSortingEnabled(True)
        self.dockComponent.setWindowTitle(_translate("MainWindow", "Component"))
        self.dockLog.setToolTip(_translate("MainWindow", "Log window"))
        self.dockLog.setStatusTip(_translate("MainWindow", "Log window"))
        self.dockLog.setWhatsThis(_translate("MainWindow", "Log window"))
        self.dockLog.setWindowTitle(_translate("MainWindow", "Log"))
        self.dockConnectors.setWindowTitle(_translate("MainWindow", "Connectors"))
        self.textConnectorsFilter.setPlaceholderText(_translate("MainWindow", "Filter (press enter)"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setToolTip(_translate("MainWindow", "Save design to file"))
        self.actionSave.setStatusTip(_translate("MainWindow", "Save design to file"))
        self.actionSave.setWhatsThis(_translate("MainWindow", "Save design to file"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionLoad.setText(_translate("MainWindow", "Load"))
        self.actionLoad.setToolTip(_translate("MainWindow", "Load design from file"))
        self.actionLoad.setStatusTip(_translate("MainWindow", "Load design from file"))
        self.actionLoad.setWhatsThis(_translate("MainWindow", "Load design from file"))
        self.actionLoad.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionDesign.setText(_translate("MainWindow", "Design"))
        self.actionComponent.setText(_translate("MainWindow", "Component"))
        self.actionElements.setText(_translate("MainWindow", "Elements"))
        self.actionLog.setText(_translate("MainWindow", "Log"))
        self.actionNewComponent.setText(_translate("MainWindow", "Create"))
        self.actionNewComponent.setToolTip(_translate("MainWindow", "Create new component"))
        self.actionDelete_All.setText(_translate("MainWindow", "Delete all"))
        self.actionDelete_All.setToolTip(_translate("MainWindow", "Delete All Component Objects and Elements"))
        self.actionZoom.setText(_translate("MainWindow", "Zoom"))
        self.actionZoom.setToolTip(_translate("MainWindow", "Zoom control"))
        self.actionZoom.setShortcut(_translate("MainWindow", "Z"))
        self.actionPan.setText(_translate("MainWindow", "Pan"))
        self.actionPan.setShortcut(_translate("MainWindow", "P"))
        self.actionConnectors.setText(_translate("MainWindow", "Connectors"))
        self.actionConnectors.setToolTip(_translate("MainWindow", "Show connectors"))
        self.actionConnectors.setShortcut(_translate("MainWindow", "C"))
        self.actionStyleOpen.setText(_translate("MainWindow", "Open File"))
        self.actionStyleDefault.setText(_translate("MainWindow", "Default"))
        self.actionStyleDark.setText(_translate("MainWindow", "Dark"))
        self.actionScreenshot.setText(_translate("MainWindow", "Screenshot"))
        self.actionScreenshot.setToolTip(_translate("MainWindow", "Take a screenshot of the window"))
        self.action_full_refresh.setText(_translate("MainWindow", "Refresh"))
        self.action_full_refresh.setToolTip(_translate("MainWindow", "Force a full refresh of all plots and widgets"))
        self.action_full_refresh.setShortcut(_translate("MainWindow", "Meta+R"))
        self.actionRebuild.setText(_translate("MainWindow", "Rebuild"))
        self.actionRebuild.setToolTip(_translate("MainWindow", "Force rebuild all components"))
        self.actionRebuild.setStatusTip(_translate("MainWindow", "Force rebuild all components"))
        self.actionRebuild.setWhatsThis(_translate("MainWindow", "Force rebuild all components"))
        self.actionFull_Screen.setText(_translate("MainWindow", "Full Screen"))
        self.actionFull_Screen.setToolTip(_translate("MainWindow", "Go to full screen"))

from .widgets.log_metal import LoggingWindowWidget
from .widgets.table_components import TableComponents
from . import main_window_rc_rc
